{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\AutoX\\\\frontend\\\\my-app\\\\src\\\\practice.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./practice.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Practice() {\n  _s();\n  const [imageData, setImageData] = React.useState(\"\");\n  const [product, setProduct] = useState([]);\n  function handleClick(event) {\n    console.log(\"clicked\");\n    //  console.log(imageData);\n\n    axios.post(\"http://localhost:5000/practice\", {\n      name: \"image-1\",\n      url: imageData\n    }).then(function (res) {\n      console.log(res);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    // Fetch product data from the backend\n    axios.get(\"http://localhost:5000/practice\").then(response => {\n      setProduct(response.data);\n      console.log(product);\n    }).catch(error => {\n      console.error(\"Error fetching store data:\", error);\n    });\n  }, []);\n  function handleChange(event) {\n    const file = event.target.files[0];\n    if (file && file instanceof Blob) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result;\n        setImageData(base64String);\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-images\",\n      children: product.map(item => {\n        /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n_s(Practice, \"xczAx7aYhJw5A76KYdCR6ei574s=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Practice","_s","imageData","setImageData","product","setProduct","handleClick","event","console","log","post","name","url","then","res","catch","err","get","response","data","error","handleChange","file","target","files","Blob","reader","FileReader","onloadend","base64String","result","readAsDataURL","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","onClick","map","item","_c","$RefreshReg$"],"sources":["E:/React/AutoX/frontend/my-app/src/practice.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { useState,useEffect } from \"react\";\r\nimport \"./practice.css\"\r\nimport axios from \"axios\";\r\n\r\nfunction Practice(){\r\n\r\n    const [imageData, setImageData] = React.useState(\"\");\r\n    const [product, setProduct] = useState([]);\r\n\r\n    function handleClick(event){\r\n         console.log(\"clicked\")\r\n        //  console.log(imageData);\r\n\r\n         axios.post(\"http://localhost:5000/practice\",{\r\n            name: \"image-1\",\r\n            url: imageData\r\n        }).then(function(res){\r\n            console.log(res);\r\n        }).catch(function(err){\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Fetch product data from the backend\r\n        axios\r\n          .get(\"http://localhost:5000/practice\")\r\n          .then((response) => {\r\n            setProduct(response.data);\r\n            console.log(product);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching store data:\", error);\r\n          });\r\n      }, []);\r\n    \r\n    function handleChange(event) {\r\n        const file = event.target.files[0];\r\n        if (file && file instanceof Blob) {\r\n          const reader = new FileReader();\r\n          reader.onloadend = () => {\r\n            const base64String = reader.result;\r\n            setImageData(base64String);\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    return <div className = \"practice\">\r\n        <div className=\"img\">\r\n            <img src={imageData}></img>\r\n        </div>\r\n        <br></br>\r\n        <input onChange={handleChange} type=\"file\"></input>\r\n        <br></br>\r\n        <button onClick={handleClick}>Submit</button>\r\n        <div className=\"all-images\">\r\n            {product.map(item =>{\r\n                <img src={item.url}></img>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Practice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}