{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\AutoX\\\\frontend\\\\my-app\\\\src\\\\shoping_cart2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Header2 from \"./header2\";\nimport Product_list2 from \"./product_list2\";\nimport CartList from \"./cartList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Shopping_cart() {\n  _s();\n  const [product, setProduct] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [showCart, setShowCart] = useState(false);\n  useEffect(() => {\n    // Fetch product data from the backend\n    axios.get(\"http://localhost:5000/product\").then(response => {\n      setProduct(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching product data:\", error);\n    });\n  }, []); // Empty dependency array to fetch data only once on component mount\n\n  function addToCart(data) {\n    setCart([...cart, {\n      ...data,\n      quantity: 1\n    }]);\n  }\n  const handleShow = value => {\n    setShowCart(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header2, {\n      handleShow: handleShow,\n      count: cart.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), showCart ? /*#__PURE__*/_jsxDEV(CartList, {\n      cart: cart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Product_list2, {\n      product: product,\n      addToCart: addToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Shopping_cart, \"SGU0tOCtZXhdUqEqapP5gNmIDQ0=\");\n_c = Shopping_cart;\nexport default Shopping_cart;\nvar _c;\n$RefreshReg$(_c, \"Shopping_cart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Header2","Product_list2","CartList","jsxDEV","_jsxDEV","Shopping_cart","_s","product","setProduct","cart","setCart","showCart","setShowCart","get","then","response","data","catch","error","console","addToCart","quantity","handleShow","value","children","count","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/AutoX/frontend/my-app/src/shoping_cart2.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header2 from \"./header2\";\r\nimport Product_list2 from \"./product_list2\";\r\nimport CartList from \"./cartList\";\r\n\r\nfunction Shopping_cart() {\r\n  const [product, setProduct] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [showCart, setShowCart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch product data from the backend\r\n    axios.get(\"http://localhost:5000/product\")\r\n      .then((response) => {\r\n        setProduct(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching product data:\", error);\r\n      });\r\n  }, []); // Empty dependency array to fetch data only once on component mount\r\n\r\n  function addToCart(data) {\r\n    setCart([...cart, { ...data, quantity: 1 }]);\r\n  }\r\n\r\n  const handleShow = (value) => {\r\n    setShowCart(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header2 handleShow={handleShow} count={cart.length} />\r\n      {showCart ? (\r\n        <CartList cart={cart}></CartList>\r\n      ) : (\r\n        <Product_list2\r\n          product={product}\r\n          addToCart={addToCart}\r\n        ></Product_list2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Shopping_cart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACc,GAAG,CAAC,+BAA+B,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAK;MAClBP,UAAU,CAACO,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,SAASE,SAASA,CAACJ,IAAI,EAAE;IACvBN,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;MAAE,GAAGO,IAAI;MAAEK,QAAQ,EAAE;IAAE,CAAC,CAAC,CAAC;EAC9C;EAEA,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5BX,WAAW,CAACW,KAAK,CAAC;EACpB,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACJ,OAAO;MAACsB,UAAU,EAAEA,UAAW;MAACG,KAAK,EAAEhB,IAAI,CAACiB;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtDnB,QAAQ,gBACPP,OAAA,CAACF,QAAQ;MAACO,IAAI,EAAEA;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,gBAEjC1B,OAAA,CAACH,aAAa;MACZM,OAAO,EAAEA,OAAQ;MACjBa,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CArCQD,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}