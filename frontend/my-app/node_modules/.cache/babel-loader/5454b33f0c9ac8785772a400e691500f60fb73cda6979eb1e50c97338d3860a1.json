{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\AutoX\\\\frontend\\\\my-app\\\\src\\\\practice.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./practice.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Practice() {\n  _s();\n  const [imageData, setImageData] = React.useState(\"\");\n  function handleClick(event) {\n    console.log(\"clicked\");\n    console.log(imageData);\n  }\n  function handleChange(event) {\n    const file = event.target.files[0];\n    if (file && file instanceof Blob) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result;\n        setImageData(base64String);\n        console.log(base64String);\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n_s(Practice, \"LuVsDoAuqKAOr4B5NqUSMuvJufw=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Practice","_s","imageData","setImageData","useState","handleClick","event","console","log","handleChange","file","target","files","Blob","reader","FileReader","onloadend","base64String","result","readAsDataURL","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","onClick","_c","$RefreshReg$"],"sources":["E:/React/AutoX/frontend/my-app/src/practice.jsx"],"sourcesContent":["import React from \"react\"\r\nimport \"./practice.css\"\r\n\r\nfunction Practice(){\r\n\r\n    const [imageData, setImageData] = React.useState(\"\");\r\n\r\n    function handleClick(event){\r\n         console.log(\"clicked\")\r\n         console.log(imageData);\r\n    }\r\n    \r\n    function handleChange(event) {\r\n        const file = event.target.files[0];\r\n        if (file && file instanceof Blob) {\r\n          const reader = new FileReader();\r\n          reader.onloadend = () => {\r\n            const base64String = reader.result;\r\n            setImageData(base64String);\r\n            console.log(base64String);\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    return <div className = \"practice\">\r\n        <div className=\"img\">\r\n            <img src={imageData}></img>\r\n        </div>\r\n        <br></br>\r\n        <input onChange={handleChange} type=\"file\"></input>\r\n        <br></br>\r\n        <button onClick={handleClick}>Submit</button>\r\n    </div>\r\n}\r\n\r\nexport default Practice;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAEf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAEpD,SAASC,WAAWA,CAACC,KAAK,EAAC;IACtBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EAC3B;EAEA,SAASO,YAAYA,CAACH,KAAK,EAAE;IACzB,MAAMI,IAAI,GAAGJ,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,YAAYG,IAAI,EAAE;MAChC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvB,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAM;QAClCf,YAAY,CAACc,YAAY,CAAC;QAC1BV,OAAO,CAACC,GAAG,CAACS,YAAY,CAAC;MAC3B,CAAC;MACDH,MAAM,CAACK,aAAa,CAACT,IAAI,CAAC;IAC5B;EACJ;EACA,oBAAOX,OAAA;IAAKqB,SAAS,EAAG,UAAU;IAAAC,QAAA,gBAC9BtB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChBtB,OAAA;QAAKuB,GAAG,EAAEpB;MAAU;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACN3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3B,OAAA;MAAO4B,QAAQ,EAAElB,YAAa;MAACmB,IAAI,EAAC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnD3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3B,OAAA;MAAQ8B,OAAO,EAAExB,WAAY;MAAAgB,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AACV;AAACzB,EAAA,CA9BQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}